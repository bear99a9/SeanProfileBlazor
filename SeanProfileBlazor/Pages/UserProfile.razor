@page "/profile"
@inject IAuthService authService
@attribute [Authorize]

<AuthorizeView>
            <h3>Welcome back <i>@context.User.Identity.Name</i></h3>
</AuthorizeView>

<h5>Change Password</h5>

<EditForm Model="request" OnValidSubmit="ChangePassowrd">
    <DataAnnotationsValidator></DataAnnotationsValidator>
     <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" type="password" placeholder="Password" @bind-Value="request.Password" class="form-control" />
        <ValidationMessage For="@(() => request.Password)" />
     </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" type="password" placeholder="Repeat Password" @bind-Value="request.ConfirmPassword" class="form-control" />
        <ValidationMessage For="@(() => request.ConfirmPassword)" />
     </div>
     <button type="submit" class="btn btn-primary">Register</button>
     <div class="@messageCssClass">
         <span>@message</span>
     </div>
</EditForm>

@code {
    UserChangePassword request = new UserChangePassword();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    private async Task ChangePassowrd()
    {
        var result = await authService.ChangePassword(request);
        
        message = result.Message;
        
        if (result.Success)
        {
            messageCssClass = "text-success";
        }
        else
        {
           messageCssClass = "text-danger";
        }

    }
}
