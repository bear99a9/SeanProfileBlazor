@page "/register"
@inject IAuthService authService

<PageTitle>Register</PageTitle>
<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" placeholder="Email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)" />
     </div>
         <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" type="password" placeholder="Password" @bind-Value="user.Password" class="form-control" />
        <ValidationMessage For="@(() => user.Password)" />
     </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" type="password" placeholder="Repeat Password" @bind-Value="user.ConfirmPassword" class="form-control" />
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
     </div>
     <button type="submit" class="btn btn-primary">Register</button>
     <div class="@messageCssClass">
         <span>@message</span>
     </div>
</EditForm>


@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await authService.RegisterUser(user);

        message = result.Message;

        if (result.Success)
        {
            messageCssClass = "text-success";
        }
        else
        {
           messageCssClass = "text-danger";
        }
    }
}
